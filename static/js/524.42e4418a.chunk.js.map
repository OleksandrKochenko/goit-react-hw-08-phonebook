{"version":3,"file":"static/js/524.42e4418a.chunk.js","mappings":"iOAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAQtBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACL,EAPyB,SAAAC,GAAK,OAAIA,EAAMK,OAAOC,IAAjB,IAQ/B,SAACL,EAAUI,GACT,OAAOJ,EAASI,QAAO,SAAAE,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASL,EAAOI,cADf,GAG/B,I,kBCXY,SAASE,EAAT,GAAmC,IAAZJ,EAAW,EAAXA,QAC9BK,GAAWC,EAAAA,EAAAA,MAGjB,OACE,gCACGN,EAAQC,KADX,KACmBD,EAAQO,QACzB,mBACEC,MAAO,CACLC,WAAY,OACZC,OAAQ,OACRC,OAAQ,WAEVC,KAAK,SACLC,QAZe,kBAAMR,GAASS,EAAAA,EAAAA,IAAcd,EAAQe,IAArC,EAKjB,UASE,SAAC,KAAD,CAAwBC,KAAM,SAIrC,CCrBc,SAASC,IACtB,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYvB,GAEpC,OACE,eAAIY,MAAO,CAAEY,OAAQ,KAArB,SACGF,EAAgBG,KAAI,SAAAC,GACnB,OACE,yBACE,SAAClB,EAAD,CAAaJ,QAASsB,KADfA,EAAKP,GAIjB,KAGN,C,aCHD,EAZe,WACb,IAAMV,GAAWC,EAAAA,EAAAA,MAGjB,OACE,uDAC0B,QACxB,kBAAOM,KAAK,OAAOW,SAAU,SAAAC,GAAC,OALP1B,EAK8B0B,EAAEC,OAAOC,MAL7BrB,GAASsB,EAAAA,EAAAA,GAAU7B,IAA7B,IAAAA,CAKO,MAGnC,ECbY8B,EAAY,WACvB,OACE,qCAEE,mBACA,kBACEhB,KAAK,OACLX,KAAK,OACL4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,MAIf,EAEYC,EAAW,WACtB,OACE,sCAEE,mBACA,kBACEpB,KAAK,MACLX,KAAK,MACL4B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,MAIf,EAEYE,EAAe,WAC1B,OACE,mBACEzB,MAAO,CACL0B,QAAS,MACTC,aAAc,MACdC,WAAY,MACZzB,OAAQ,WAEVC,KAAK,SAPP,wBAYH,ECzCc,SAASyB,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXZ,GAAWyB,EAAAA,EAAAA,IAAY3B,GAiB7B,OACE,kBACEgB,MAAO,CAAEE,OAAQ,kBAAmBwB,QAAS,OAAQI,MAAO,SAC5DC,SAlBiB,SAAAf,GACnBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEC,OACTiB,EAAO,CACXzC,KAAMwC,EAAKE,SAAS1C,KAAKyB,MACzBnB,OAAQkC,EAAKE,SAASC,IAAIlB,OAE5BhC,EAASmD,MACP,SAAA7C,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBwC,EAAKzC,KAAKC,aAA7C,IAEL4C,MAAM,GAAD,OAAIJ,EAAKzC,KAAT,6BACLI,GAAS0C,EAAAA,EAAAA,IAAWL,IACxBD,EAAKO,OACN,EAGC,WAIE,SAACpB,EAAD,KACA,mBACA,mBACA,SAACI,EAAD,KACA,mBACA,mBACA,SAACC,EAAD,MAGL,CC/Bc,SAASgB,IACtB,IAAM5C,GAAWC,EAAAA,EAAAA,MAMjB,OAJA4C,EAAAA,EAAAA,YAAU,WACR7C,GAAS8C,EAAAA,EAAAA,MACV,GAAE,CAAC9C,KAGF,4BACE,2CACA,SAACgC,EAAD,KACA,SAAC,EAAD,KACA,SAACpB,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","components/Filter/Filter.jsx","components/Form/FormElements.jsx","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.text;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { MdOutlineDeleteForever } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport default function ContactItem({ contact }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      {contact.name}: {contact.number}\n      <button\n        style={{\n          background: 'none',\n          border: 'none',\n          cursor: 'pointer',\n        }}\n        type=\"button\"\n        onClick={handleDelete}\n      >\n        <MdOutlineDeleteForever size={24} />\n      </button>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object,\n};\n","import { useSelector } from 'react-redux';\nimport { selectFiltredContacts } from '../../redux/contacts/selectors';\nimport ContactItem from './ContactItem';\n\nexport default function ContactList() {\n  const filtredContacts = useSelector(selectFiltredContacts);\n\n  return (\n    <ul style={{ margin: '0' }}>\n      {filtredContacts.map(item => {\n        return (\n          <li key={item.id}>\n            <ContactItem contact={item} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = filter => dispatch(setFilter(filter));\n\n  return (\n    <label>\n      Find contacts by name: {'\\u00A0'}\n      <input type=\"text\" onChange={e => handleFilterChange(e.target.value)} />\n    </label>\n  );\n};\n\nexport default Filter;\n","export const NameInput = () => {\n  return (\n    <label>\n      Name\n      <br />\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </label>\n  );\n};\n\nexport const TelInput = () => {\n  return (\n    <label>\n      Phone\n      <br />\n      <input\n        type=\"tel\"\n        name=\"tel\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n    </label>\n  );\n};\n\nexport const SubmitButton = () => {\n  return (\n    <button\n      style={{\n        padding: '3px',\n        borderRadius: '5px',\n        fontWeight: '700',\n        cursor: 'pointer',\n      }}\n      type=\"submit\"\n    >\n      Add contact\n    </button>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { NameInput, TelInput, SubmitButton } from './FormElements';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const data = {\n      name: form.elements.name.value,\n      number: form.elements.tel.value,\n    };\n    contacts.some(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    )\n      ? alert(`${data.name} is already in contacts!`)\n      : dispatch(addContact(data));\n    form.reset();\n  };\n\n  return (\n    <form\n      style={{ border: '1px solid black', padding: '20px', width: '400px' }}\n      onSubmit={handleSubmit}\n    >\n      <NameInput />\n      <br />\n      <br />\n      <TelInput />\n      <br />\n      <br />\n      <SubmitButton />\n    </form>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport ContactList from 'components/Contacts/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/Form/Form';\n\nexport default function Home() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Contacts page</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFiltredContacts","createSelector","filter","text","contact","name","toLowerCase","includes","ContactItem","dispatch","useDispatch","number","style","background","border","cursor","type","onClick","deleteContact","id","size","ContactList","filtredContacts","useSelector","margin","map","item","onChange","e","target","value","setFilter","NameInput","pattern","title","required","TelInput","SubmitButton","padding","borderRadius","fontWeight","ContactForm","width","onSubmit","preventDefault","form","data","elements","tel","some","alert","addContact","reset","Home","useEffect","fetchContacts"],"sourceRoot":""}