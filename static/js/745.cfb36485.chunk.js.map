{"version":3,"file":"static/js/745.cfb36485.chunk.js","mappings":"mQAKe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAC9BC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,gCACGF,EAAQG,KADX,KACmBH,EAAQI,QACzB,mBACEC,MAAO,CACLC,WAAY,OACZC,OAAQ,OACRC,OAAQ,WAEVC,KAAK,SACLC,QAZe,kBAAMT,GAASU,EAAAA,EAAAA,IAAcX,EAAQY,IAArC,EAKjB,UASE,SAAC,KAAD,CAAwBC,KAAM,SAIrC,CCtBc,SAASC,IACtB,IAAQC,GAAoBC,EAAAA,EAAAA,KAApBD,gBAER,OACE,eAAIV,MAAO,CAAEY,OAAQ,KAArB,SACGF,EAAgBG,KAAI,SAAAC,GACnB,OACE,yBACE,SAACpB,EAAD,CAAaC,QAASmB,KADfA,EAAKP,GAIjB,KAGN,C,cCFD,EAZe,WACb,IAAMX,GAAWC,EAAAA,EAAAA,MAGjB,OACE,uDAC0B,QACxB,kBAAOO,KAAK,OAAOW,SAAU,SAAAC,GAAC,OALPC,EAK8BD,EAAEE,OAAOC,MAL7BvB,GAASwB,EAAAA,EAAAA,GAAUH,IAA7B,IAAAA,CAKO,MAGnC,E,UCbYI,EAAY,WACvB,OACE,qCAEE,mBACA,kBACEjB,KAAK,OACLN,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,MAIf,EAEYC,EAAW,WACtB,OACE,sCAEE,mBACA,kBACErB,KAAK,MACLN,KAAK,MACLwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,MAIf,EAEYE,EAAe,WAC1B,OACE,mBACE1B,MAAO,CACL2B,QAAS,MACTC,aAAc,MACdC,WAAY,MACZ1B,OAAQ,WAEVC,KAAK,SAPP,wBAYH,ECxCc,SAAS0B,IACtB,IAAMlC,GAAWC,EAAAA,EAAAA,MACTkC,GAAapB,EAAAA,EAAAA,KAAboB,SACFC,EAAa,CACjBJ,aAAc,OACd1B,OAAQ,oBACRD,WAAY,OACZgC,MAAO,QAoBT,OACE,kBACEjC,MAAO,CAAEE,OAAQ,kBAAmByB,QAAS,OAAQO,MAAO,SAC5DC,SApBiB,SAAAnB,GACnBA,EAAEoB,iBACF,IAAMC,EAAOrB,EAAEE,OACToB,EAAO,CACXxC,KAAMuC,EAAKE,SAASzC,KAAKqB,MACzBpB,OAAQsC,EAAKE,SAASC,IAAIrB,OAE5BY,EAASU,MACP,SAAA9C,GAAO,OAAIA,EAAQG,KAAK4C,gBAAkBJ,EAAKxC,KAAK4C,aAA7C,KAELC,EAAAA,EAAAA,IAAM,GAAD,OAAIL,EAAKxC,KAAT,4BAAyC,CAC5CE,MAAOgC,IAETpC,GAASgD,EAAAA,EAAAA,IAAWN,IACxBD,EAAKQ,OACN,EAGC,WAIE,SAACxB,EAAD,KACA,mBACA,mBACA,SAACI,EAAD,KACA,mBACA,mBACA,SAACC,EAAD,MAGL,CCvCc,SAASoB,IACtB,IAAMlD,GAAWC,EAAAA,EAAAA,MAMjB,OAJAkD,EAAAA,EAAAA,YAAU,WACRnD,GAASoD,EAAAA,EAAAA,MACV,GAAE,CAACpD,KAGF,iBAAKI,MAAO,CAAE2B,QAAS,UAAvB,WACE,SAACsB,EAAA,EAAD,WACE,2CAEF,2CACA,SAACnB,EAAD,KACA,SAAC,EAAD,KACA,SAACrB,EAAD,MAGL,C","sources":["components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","components/Filter/Filter.jsx","components/Form/FormElements.jsx","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["import { MdOutlineDeleteForever } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport default function ContactItem({ contact }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      {contact.name}: {contact.number}\n      <button\n        style={{\n          background: 'none',\n          border: 'none',\n          cursor: 'pointer',\n        }}\n        type=\"button\"\n        onClick={handleDelete}\n      >\n        <MdOutlineDeleteForever size={24} />\n      </button>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object,\n};\n","import { useContacts } from 'hooks/useContacts';\nimport ContactItem from './ContactItem';\n\nexport default function ContactList() {\n  const { filtredContacts } = useContacts();\n\n  return (\n    <ul style={{ margin: '0' }}>\n      {filtredContacts.map(item => {\n        return (\n          <li key={item.id}>\n            <ContactItem contact={item} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = filter => dispatch(setFilter(filter));\n\n  return (\n    <label>\n      Find contacts by name: {'\\u00A0'}\n      <input type=\"text\" onChange={e => handleFilterChange(e.target.value)} />\n    </label>\n  );\n};\n\nexport default Filter;\n","export const NameInput = () => {\n  return (\n    <label>\n      Name\n      <br />\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </label>\n  );\n};\n\nexport const TelInput = () => {\n  return (\n    <label>\n      Phone\n      <br />\n      <input\n        type=\"tel\"\n        name=\"tel\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n    </label>\n  );\n};\n\nexport const SubmitButton = () => {\n  return (\n    <button\n      style={{\n        padding: '3px',\n        borderRadius: '5px',\n        fontWeight: '700',\n        cursor: 'pointer',\n      }}\n      type=\"submit\"\n    >\n      Add contact\n    </button>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { addContact } from 'redux/contacts/operations';\nimport { useContacts } from 'hooks/useContacts';\nimport { NameInput, TelInput, SubmitButton } from './FormElements';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n  const toastStyle = {\n    borderRadius: '10px',\n    border: '3px solid #3f51b5',\n    background: 'gray',\n    color: '#fff',\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const data = {\n      name: form.elements.name.value,\n      number: form.elements.tel.value,\n    };\n    contacts.some(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    )\n      ? toast(`${data.name} is already in contacts!`, {\n          style: toastStyle,\n        })\n      : dispatch(addContact(data));\n    form.reset();\n  };\n\n  return (\n    <form\n      style={{ border: '1px solid black', padding: '20px', width: '400px' }}\n      onSubmit={handleSubmit}\n    >\n      <NameInput />\n      <br />\n      <br />\n      <TelInput />\n      <br />\n      <br />\n      <SubmitButton />\n    </form>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport ContactList from 'components/Contacts/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/Form/Form';\n\nexport default function Home() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={{ padding: '0 40px' }}>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <h1>Contacts page</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["ContactItem","contact","dispatch","useDispatch","name","number","style","background","border","cursor","type","onClick","deleteContact","id","size","ContactList","filtredContacts","useContacts","margin","map","item","onChange","e","filter","target","value","setFilter","NameInput","pattern","title","required","TelInput","SubmitButton","padding","borderRadius","fontWeight","ContactForm","contacts","toastStyle","color","width","onSubmit","preventDefault","form","data","elements","tel","some","toLowerCase","toast","addContact","reset","Home","useEffect","fetchContacts","Helmet"],"sourceRoot":""}